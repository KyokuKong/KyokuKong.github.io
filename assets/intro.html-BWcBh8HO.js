import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as t,c as d,a as s,b as a,d as l,e}from"./app-BXfyIucM.js";const r={},c=e(`<p>因为参加了学校的区块链竞赛，于是需要学习一下以太坊平台的智能合约写法，sadly，这个语言相当有一点独特，于是特开了一点文档记录一下学习的过程。</p><h2 id="solidity是什么" tabindex="-1"><a class="header-anchor" href="#solidity是什么" aria-hidden="true">#</a> Solidity是什么？</h2><blockquote><p>Solidity 是一门面向合约的、为实现智能合约而创建的高级编程语言。智能合约是管理以太坊状态里账户行为的程序。 —— Solidity 中文文档</p></blockquote><p>Solidity是一种写起来类似面向对象语言的针对智能合约设计的高级语言。</p><p>不过Solidity并不适用于单独开发应用，只适合开发合约。</p><h2 id="基本语法和结构" tabindex="-1"><a class="header-anchor" href="#基本语法和结构" aria-hidden="true">#</a> 基本语法和结构</h2><p>Solidity的单个文件比较类似于Java等面向对象语言中的源文件，<code>.sol</code>文件中包含一个或多个合约，有这样的结构：</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">//SPDX-License-Identifier: GPL-3.0</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.4</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">SimpleContract</span> <span class="token punctuation">{</span>
    <span class="token comment">// &#39;&#39;&#39;</span>
    <span class="token comment">// 合约内容</span>
    <span class="token comment">// &#39;&#39;&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),p={href:"https://learnblockchain.cn/docs/solidity/style-guide.html",target:"_blank",rel:"noopener noreferrer"},m=e(`<h3 id="源文件结构" tabindex="-1"><a class="header-anchor" href="#源文件结构" aria-hidden="true">#</a> 源文件结构</h3><h4 id="spdx版权许可标识" tabindex="-1"><a class="header-anchor" href="#spdx版权许可标识" aria-hidden="true">#</a> SPDX版权许可标识</h4><p>首先从<code>//SPDX-License-Identifier: GPL-3.0</code>起始的这一部分开始，这是Solidity的SPDX版权许可标识，Solidity要求在任何一个源文件中都应该以一个这样的开源许可证注释作为起始。</p><p>如果不需要开源代码，则应将其设置为<code>UNLICENSED</code></p><h4 id="pragma版本标识" tabindex="-1"><a class="header-anchor" href="#pragma版本标识" aria-hidden="true">#</a> pragma版本标识</h4><p>solidity用pragma关键字来告诉编译器如何编译。</p><p>可以直接指定编译器版本的范围，像这样：</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.16</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以用^符号来指定其大于等于某个版本但是小于下一个重大更新版本：</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.5.2</span><span class="token punctuation">;</span> <span class="token comment">// 这样的标识意味着编译器版本可以在0.5.2和0.6.0之间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10);function u(h,k){const n=o("ExternalLinkIcon");return t(),d("div",null,[c,s("p",null,[a("Solidity的类名命名遵守驼峰式命名，每个词的首字母和缩写的全部字母需要大写，整体代码缩进等风格比较接近Python，详见"),s("a",p,[a("编程风格指南"),l(n)]),a("。")]),m])}const b=i(r,[["render",u],["__file","intro.html.vue"]]);export{b as default};
