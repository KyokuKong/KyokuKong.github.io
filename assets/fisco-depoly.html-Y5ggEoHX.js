import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as p,a as s,b as n,d as e,e as i}from"./app-mM2KBLfh.js";const t={},d=i('<h2 id="哈-为什么会写这玩意" tabindex="-1"><a class="header-anchor" href="#哈-为什么会写这玩意" aria-hidden="true">#</a> 哈？为什么会写这玩意？</h2><p>好问题，我也不知道。</p><p>前段时间混到了学校的区块链工作室准备小小的赚点学分和奖金，如果能够再嫖他一两张证书那自然是更好的。于是我不知道哪里来的勇气顺手报了学校的技能比赛。</p><p>哦，我的天哪，它刚好是明天，而且不允许现场查文档（但是能用网络，倒还好，起码docker之类的可以用）。</p><p>于是本着究极临时抱佛脚的心态，赶紧复习一下之前学的这堆玩意。</p><p>要说有什么好消息的话......大概是这部分确实还是很简单的。</p><p>好的，在我码完这几句话并且到达12月1日之前，赶紧开工吧。</p><h2 id="前置准备" tabindex="-1"><a class="header-anchor" href="#前置准备" aria-hidden="true">#</a> 前置准备</h2><ul><li>VMWare Workstation 17</li></ul><p>虚拟机平台，我觉得这个应该不太需要解释为什么要装。</p>',10),r={href:"https://www.52pojie.cn/thread-1804571-1-1.html",target:"_blank",rel:"noopener noreferrer"},u=s("hr",null,null,-1),v=s("ul",null,[s("li",null,"Ubuntu 20.04 LTS (Live)")],-1),m=s("p",null,"实际上爱用哪个版本都行，不是ubuntu也完全没问题，当然最好还是Debian系啦。",-1),b={href:"https://iso.mirrors.ustc.edu.cn/ubuntu-releases/jammy/ubuntu-22.04.3-desktop-amd64.iso",target:"_blank",rel:"noopener noreferrer"},h=i(`<p><s>啊你问为什么不是Server CLI版本？因为我喜欢啊（笑</s></p><hr><ul><li>OpenJDK 11/15</li></ul><p>这个配置完了记得要设置一下JAVA_HOME的环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openjdk-11-jdk
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-11-openjdk-amd64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>MySQL</li></ul><p>显然是需要用的，所以安装一份，虽然一般说要用docker，但是这里用docker会特别容易翻车，还是不献丑了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> mariadb-server

<span class="token function">sudo</span> mysqladmin password <span class="token number">123456</span>
<span class="token comment"># 或者你也可以</span>
SET PASSWORD FOR <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> <span class="token operator">=</span> PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>Python 3</li></ul><p>显然需要用py来运行最后的webase部署脚本。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3-pymysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装ubuntu环境" tabindex="-1"><a class="header-anchor" href="#安装ubuntu环境" aria-hidden="true">#</a> 安装Ubuntu环境</h2><p>我觉得VMware里打开然后装个Ubuntu不是什么很复杂的操作吧......</p><p>记得要设置成NAT模式，然后存储要分20G以上，内存多多益善。</p><p>建议先分配一个空白硬盘然后再装入ubuntu，然后最小安装即可。</p><h2 id="ssh连接到ubuntu" tabindex="-1"><a class="header-anchor" href="#ssh连接到ubuntu" aria-hidden="true">#</a> SSH连接到Ubuntu</h2><p>我相信你绝对不会喜欢vmware里的傻卵键盘输入，所以赶紧自己ssh进去吧。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> root@<span class="token operator">&lt;</span>你的虚拟机的ip地址<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>顺便非常建议你尝试一下<code>Windows Terminal</code>，这玩意真的是个人感觉用过最舒服的终端，看着养眼配置性好而且完全免费功能也不少。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如果你不知道ubuntu的ip地址是多少，可以这样做：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> net-tools
<span class="token function">ifconfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>一般来讲在你登录之前你需要保证你的ubuntu支持被远程登录，所以要先设置openssl的配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">ssh</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span>
<span class="token function">sudo</span> <span class="token function">vim</span> /etc/ssh/sshd_config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后设置<code>PermitRootLogin</code>为<code>yes</code>，然后<code>esc</code>并<code>:wq</code>退出vim并保存文件。</p><p>然后你需要重启ssh服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>锵锵，这样就就可以用powershell登入ssh了！</p><figure><img src="https://img.kyoku.top/20231201003742.png" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果你觉得如上的操作进行的都非常慢，那么大概率你的网络环境不太美丽，你需要换源！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g&#39;</span> /etc/apt/sources.list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h2 id="部署节点" tabindex="-1"><a class="header-anchor" href="#部署节点" aria-hidden="true">#</a> 部署节点</h2><p>首先，还是回到我们的shell里面。</p><p>使用apt工具安装以下的软件包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">curl</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openssl
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">wget</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> dos2unix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在主文件夹中创建一个<code>/fisco</code>文件夹用来存放我们的整个区块链项目。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> fisco
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下载部署脚本到我们的项目文件夹中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/fisco <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> -<span class="token comment">#LO https://osp-1257653870.cos.ap-guangzhou.myqcloud.com/FISCO-BCOS/FISCO-BCOS/releases/v2.9.1/build_chain.sh &amp;&amp; chmod u+x build_chain.sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开始搭建区块链节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> build_chain.sh <span class="token parameter variable">-l</span> <span class="token number">127.0</span>.0.1:4 <span class="token parameter variable">-p</span> <span class="token number">30300,20200</span>,8545
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待节点自动下载并安装即可。</p><p>完成后输出应该是这样的：</p><figure><img src="https://img.kyoku.top/20231201010223.png" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>现在我们启动所有节点并测试节点的可用性：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> nodes/127.0.0.1/start_all.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如输出为：</p><figure><img src="https://img.kyoku.top/20231201010506.png" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>则为成功正常启动，然后我们可以检查节点的进程和节点数，以及是否正常进行了共识。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">grep</span> fisco-bcos
<span class="token function">tail</span> <span class="token parameter variable">-f</span> nodes/127.0.0.1/node0/log/log*  <span class="token operator">|</span> <span class="token function">grep</span> connected
<span class="token function">tail</span> <span class="token parameter variable">-f</span> nodes/127.0.0.1/node0/log/log*  <span class="token operator">|</span> <span class="token function">grep</span> +++
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署控制台" tabindex="-1"><a class="header-anchor" href="#部署控制台" aria-hidden="true">#</a> 部署控制台</h2><p>还是在之前的项目文件夹里，我们运行如下代码来下载console的部署脚本并安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> -<span class="token comment">#LO https://gitee.com/FISCO-BCOS/console/raw/master-2.0/tools/download_console.sh &amp;&amp; bash download_console.sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装进度条跑完之后会自动解压安装console。</p><p>现在我们导入节点的ssl证书给控制台来让其可以正确的访问到节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> nodes/127.0.0.1/sdk/. console/conf/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后我们需要生成console的配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> console/conf/config-example.toml console/conf/config.toml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动console进行测试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> console/strat.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="部署webase面板" tabindex="-1"><a class="header-anchor" href="#部署webase面板" aria-hidden="true">#</a> 部署WeBase面板</h2><p>首先拉取安装包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://osp-1257653870.cos.ap-guangzhou.myqcloud.com/WeBASE/releases/download/v1.5.5/webase-deploy.zip
<span class="token function">unzip</span> webase-deploy.zip
<span class="token builtin class-name">cd</span> webase-deploy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后修改<code>common.properties</code>配置文件中的<code>dbUsername</code>和<code>dbPassword</code>，使其和你的mysql配置对应。</p><p>开始部署！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token punctuation">..</span>/nodes/127.0.0.1/stop_all.sh

python3 deploy.py installAll
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只需要等他跑完就大功告成了！</p><figure><img src="https://img.kyoku.top/20231201014220.png" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">超精简版本！！！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">curl</span> openssl <span class="token function">wget</span> <span class="token function">git</span> nginx dos2unix openjdk-11-jdk mariadb-server python3 python3-pip python-pymysql

<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-11-openjdk-amd64

<span class="token function">sudo</span> mysqladmin password <span class="token number">123456</span>

<span class="token function">mkdir</span> fisco

<span class="token builtin class-name">cd</span> ~/fisco <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> -<span class="token comment">#LO https://osp-1257653870.cos.ap-guangzhou.myqcloud.com/FISCO-BCOS/FISCO-BCOS/releases/v2.9.1/build_chain.sh &amp;&amp; chmod u+x build_chain.sh</span>

<span class="token function">bash</span> build_chain.sh <span class="token parameter variable">-l</span> <span class="token number">127.0</span>.0.1:4 <span class="token parameter variable">-p</span> <span class="token number">30300,20200</span>,8545

<span class="token comment"># bash nodes/127.0.0.1/start_all.sh</span>

<span class="token function">curl</span> -<span class="token comment">#LO https://gitee.com/FISCO-BCOS/console/raw/master-2.0/tools/download_console.sh &amp;&amp; bash download_console.sh</span>

<span class="token function">cp</span> <span class="token parameter variable">-r</span> nodes/127.0.0.1/sdk/. console/conf/

<span class="token function">cp</span> console/conf/config-example.toml console/conf/config.toml

<span class="token function">wget</span> https://osp-1257653870.cos.ap-guangzhou.myqcloud.com/WeBASE/releases/download/v1.5.5/webase-deploy.zip

<span class="token function">unzip</span> webase-deploy.zip

<span class="token builtin class-name">cd</span> webase-deploy

<span class="token function">vim</span> common.properties
<span class="token comment"># 编辑配置文件内容</span>

<span class="token function">bash</span> <span class="token punctuation">..</span>/nodes/127.0.0.1/stop_all.sh

python3 deploy.py installAll
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,61);function k(g,f){const a=o("ExternalLinkIcon");return c(),p("div",null,[d,s("p",null,[n("妙妙链接："),s("a",r,[n("点我"),e(a)])]),u,v,m,s("p",null,[n("USTC镜像："),s("a",b,[n("中国科学技术大学开源软件镜像站"),e(a)])]),h])}const y=l(t,[["render",k],["__file","fisco-depoly.html.vue"]]);export{y as default};
